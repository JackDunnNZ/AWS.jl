# This file is auto-generated by AWSMetadata.jl
using AWS
using AWS.AWSServices: rbin
using AWS.Compat
using AWS.UUIDs

# Julia syntax for service-level optional parameters to the AWS request syntax
const SERVICE_PARAMETER_MAP = AWS.LittleDict("description" => "Description", "resource_tags" => "ResourceTags", "resource_type" => "ResourceType", "retention_period" => "RetentionPeriod", "tags" => "Tags", "max_results" => "MaxResults", "next_token" => "NextToken")

"""
    create_rule(resource_type, retention_period; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Creates a Recycle Bin retention rule. For more information, see  Create Recycle Bin
retention rules in the Amazon EC2 User Guide.

# Arguments
- `resource_type`: The resource type to be retained by the retention rule. Currently, only
  Amazon EBS snapshots are supported.
- `retention_period`: Information about the retention period for which the retention rule
  is to retain resources.

# Keyword Parameters
- `description`: A brief description for the retention rule.
- `resource_tags`: Information about the resource tags to use to identify resources that
  are to be retained by the retention rule. The retention rule retains only deleted snapshots
  that have one or more of the specified tag key and value pairs. If a snapshot is deleted,
  but it does not have any of the specified tag key and value pairs, it is immediately
  deleted without being retained by the retention rule. You can add the same tag key and
  value pair to a maximum or five retention rules.
- `tags`: Information about the tags to assign to the retention rule.
"""
function create_rule(ResourceType, RetentionPeriod; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(SERVICE_PARAMETER_MAP, kwargs)
    return rbin("POST", "/rules", Dict{String, Any}(mergewith(_merge, Dict{String, Any}("ResourceType"=>ResourceType, "RetentionPeriod"=>RetentionPeriod), params)); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    delete_rule(identifier; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Deletes a Recycle Bin retention rule. For more information, see  Delete Recycle Bin
retention rules in the Amazon EC2 User Guide.

# Arguments
- `identifier`: The unique ID of the retention rule to delete.

"""
function delete_rule(identifier; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(SERVICE_PARAMETER_MAP, kwargs)
    return rbin("DELETE", "/rules/$(identifier)", params; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    get_rule(identifier; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Gets information about a Recycle Bin retention rule.

# Arguments
- `identifier`: The unique ID of the retention rule.

"""
function get_rule(identifier; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(SERVICE_PARAMETER_MAP, kwargs)
    return rbin("GET", "/rules/$(identifier)", params; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    list_rules(resource_type; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Lists the Recycle Bin retention rules in the Region.

# Arguments
- `resource_type`: The resource type retained by the retention rule. Only retention rules
  that retain the specified resource type are listed.

# Keyword Parameters
- `max_results`: The maximum number of results to return for the request in a single page.
  The remaining results can be seen by sending another request with the returned nextToken
  value. This value can be between 5 and 500. If maxResults is given a larger value than 500,
  you receive an error.
- `next_token`: The token to use to retrieve the next page of results.
- `resource_tags`: The tags used to identify resources that are to be retained by the
  retention rule.
"""
function list_rules(ResourceType; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(SERVICE_PARAMETER_MAP, kwargs)
    return rbin("POST", "/list-rules", Dict{String, Any}(mergewith(_merge, Dict{String, Any}("ResourceType"=>ResourceType), params)); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    list_tags_for_resource(resource_arn; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Lists the tags assigned a specific resource.

# Arguments
- `resource_arn`: The Amazon Resource Name (ARN) of the resource for which to list the tags.

"""
function list_tags_for_resource(resourceArn; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(SERVICE_PARAMETER_MAP, kwargs)
    return rbin("GET", "/tags/$(resourceArn)", params; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    tag_resource(tags, resource_arn; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Assigns tags to the specified resource.

# Arguments
- `tags`: Information about the tags to assign to the resource.
- `resource_arn`: The Amazon Resource Name (ARN) of the resource to which to assign the
  tags.

"""
function tag_resource(Tags, resourceArn; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(SERVICE_PARAMETER_MAP, kwargs)
    return rbin("POST", "/tags/$(resourceArn)", Dict{String, Any}(mergewith(_merge, Dict{String, Any}("Tags"=>Tags), params)); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    untag_resource(resource_arn, tag_keys; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Unassigns a tag from a resource.

# Arguments
- `resource_arn`: The Amazon Resource Name (ARN) of the resource from which to unassign the
  tags.
- `tag_keys`: Information about the tags to unassign from the resource.

"""
function untag_resource(resourceArn, tagKeys; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(SERVICE_PARAMETER_MAP, kwargs)
    return rbin("DELETE", "/tags/$(resourceArn)", Dict{String, Any}(mergewith(_merge, Dict{String, Any}("tagKeys"=>tagKeys), params)); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    update_rule(identifier; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Updates an existing Recycle Bin retention rule. For more information, see  Update Recycle
Bin retention rules in the Amazon EC2 User Guide.

# Arguments
- `identifier`: The unique ID of the retention rule to update.

# Keyword Parameters
- `description`: The retention rule description.
- `resource_tags`: Information about the resource tags to use to identify resources that
  are to be retained by the retention rule. The retention rule retains only deleted snapshots
  that have one or more of the specified tag key and value pairs. If a snapshot is deleted,
  but it does not have any of the specified tag key and value pairs, it is immediately
  deleted without being retained by the retention rule.  You can add the same tag key and
  value pair to a maximum or five retention rules.
- `resource_type`: The resource type to be retained by the retention rule. Currently, only
  Amazon EBS snapshots are supported.
- `retention_period`: Information about the retention period for which the retention rule
  is to retain resources.
"""
function update_rule(identifier; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(SERVICE_PARAMETER_MAP, kwargs)
    return rbin("PATCH", "/rules/$(identifier)", params; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end
