# This file is auto-generated by AWSMetadata.jl
using AWS
using AWS.AWSServices: mobile
using AWS.Compat
using AWS.UUIDs

# Julia syntax for service-level optional parameters to the AWS request syntax
const SERVICE_PARAMETER_MAP = OrderedCollections.LittleDict("max_results" => "maxResults", "next_token" => "nextToken", "contents" => "contents", "name" => "name", "region" => "region", "snapshot_id" => "snapshotId", "platform" => "platform", "project_id" => "projectId", "sync_from_resources" => "syncFromResources")

"""
    create_project(; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

 Creates an AWS Mobile Hub project.

# Keyword Parameters
- `contents`:  ZIP or YAML file which contains configuration settings to be used when
  creating the project. This may be the contents of the file downloaded from the URL provided
  in an export project operation.
- `name`:  Name of the project.
- `region`:  Default region where project resources should be created.
- `snapshot_id`:  Unique identifier for an exported snapshot of project configuration. This
  snapshot identifier is included in the share URL when a project is exported.
"""
function create_project(; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return mobile("POST", "/projects", params; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    delete_project(project_id; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

 Delets a project in AWS Mobile Hub.

# Arguments
- `project_id`:  Unique project identifier.

"""
function delete_project(projectId; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return mobile("DELETE", "/projects/$(projectId)", params; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    describe_bundle(bundle_id; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

 Get the bundle details for the requested bundle id.

# Arguments
- `bundle_id`:  Unique bundle identifier.

"""
function describe_bundle(bundleId; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return mobile("GET", "/bundles/$(bundleId)", params; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    describe_project(project_id; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

 Gets details about a project in AWS Mobile Hub.

# Arguments
- `project_id`:  Unique project identifier.

# Keyword Parameters
- `sync_from_resources`:  If set to true, causes AWS Mobile Hub to synchronize information
  from other services, e.g., update state of AWS CloudFormation stacks in the AWS Mobile Hub
  project.
"""
function describe_project(projectId; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return mobile("GET", "/project", Dict{String, Any}(mergewith(_merge, Dict{String, Any}("projectId"=>projectId), params)); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    export_bundle(bundle_id; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

 Generates customized software development kit (SDK) and or tool packages used to integrate
mobile web or mobile app clients with backend AWS resources.

# Arguments
- `bundle_id`:  Unique bundle identifier.

# Keyword Parameters
- `platform`:  Developer desktop or target application platform.
- `project_id`:  Unique project identifier.
"""
function export_bundle(bundleId; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return mobile("POST", "/bundles/$(bundleId)", params; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    export_project(project_id; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

 Exports project configuration to a snapshot which can be downloaded and shared. Note that
mobile app push credentials are encrypted in exported projects, so they can only be shared
successfully within the same AWS account.

# Arguments
- `project_id`:  Unique project identifier.

"""
function export_project(projectId; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return mobile("POST", "/exports/$(projectId)", params; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    list_bundles(; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

 List all available bundles.

# Keyword Parameters
- `max_results`:  Maximum number of records to list in a single response.
- `next_token`:  Pagination token. Set to null to start listing bundles from start. If
  non-null pagination token is returned in a result, then pass its value in here in another
  request to list more bundles.
"""
function list_bundles(; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return mobile("GET", "/bundles", params; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    list_projects(; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

 Lists projects in AWS Mobile Hub.

# Keyword Parameters
- `max_results`:  Maximum number of records to list in a single response.
- `next_token`:  Pagination token. Set to null to start listing projects from start. If
  non-null pagination token is returned in a result, then pass its value in here in another
  request to list more projects.
"""
function list_projects(; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return mobile("GET", "/projects", params; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    update_project(project_id; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

 Update an existing project.

# Arguments
- `project_id`:  Unique project identifier.

# Keyword Parameters
- `contents`:  ZIP or YAML file which contains project configuration to be updated. This
  should be the contents of the file downloaded from the URL provided in an export project
  operation.
"""
function update_project(projectId; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return mobile("POST", "/update", Dict{String, Any}(mergewith(_merge, Dict{String, Any}("projectId"=>projectId), params)); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end
