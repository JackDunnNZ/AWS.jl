# This file is auto-generated by AWSMetadata.jl
using AWS
using AWS.AWSServices: iotfleethub
using AWS.Compat
using AWS.UUIDs

MAPPING = Dict(
    "application_description" => "applicationDescription",
    "client_token" => "clientToken",
    "tags" => "tags",
    "next_token" => "nextToken",
    "application_name" => "applicationName",
)

"""
    create_application(application_name, role_arn; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Creates a Fleet Hub for AWS IoT Device Management web application.  Fleet Hub for AWS IoT
Device Management is in public preview and is subject to change.

# Arguments
- `application_name`: The name of the web application.
- `role_arn`: The ARN of the role that the web application assumes when it interacts with
  AWS IoT Core.  The name of the role must be in the form AWSIotFleetHub_random_string .

# Optional Parameters
Optional parameters can be passed as a keyword argument. Valid keys are:
- `"application_description"`: An optional description of the web application.
- `"client_token"`: A unique case-sensitive identifier that you can provide to ensure the
  idempotency of the request. Don't reuse this client token if a new idempotent request is
  required.
- `"tags"`: A set of key/value pairs that you can use to manage the web application
  resource.
"""
function create_application(
    applicationName, roleArn; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...
)
    params = amazonify(MAPPING, kwargs)
    return iotfleethub(
        "POST",
        "/applications",
        Dict{String,Any}(
            mergewith(
                _merge,
                Dict{String,Any}(
                    "applicationName" => applicationName,
                    "roleArn" => roleArn,
                    "client_token" => string(uuid4()),
                ),
                params,
            ),
        );
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end

"""
    delete_application(application_id; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Deletes a Fleet Hub for AWS IoT Device Management web application.  Fleet Hub for AWS IoT
Device Management is in public preview and is subject to change.

# Arguments
- `application_id`: The unique Id of the web application.

# Optional Parameters
Optional parameters can be passed as a keyword argument. Valid keys are:
- `"client_token"`: A unique case-sensitive identifier that you can provide to ensure the
  idempotency of the request. Don't reuse this client token if a new idempotent request is
  required.
"""
function delete_application(
    applicationId; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...
)
    params = amazonify(MAPPING, kwargs)
    return iotfleethub(
        "DELETE",
        "/applications/$(applicationId)",
        Dict{String,Any}(
            mergewith(_merge, Dict{String,Any}("client_token" => string(uuid4())), params)
        );
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end

"""
    describe_application(application_id; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Gets information about a Fleet Hub for AWS IoT Device Management web application.  Fleet
Hub for AWS IoT Device Management is in public preview and is subject to change.

# Arguments
- `application_id`: The unique Id of the web application.

"""
function describe_application(
    applicationId; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...
)
    params = amazonify(MAPPING, kwargs)
    return iotfleethub(
        "GET",
        "/applications/$(applicationId)",
        params;
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end

"""
    list_applications(; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Gets a list of Fleet Hub for AWS IoT Device Management web applications for the current
account.  Fleet Hub for AWS IoT Device Management is in public preview and is subject to
change.

# Optional Parameters
Optional parameters can be passed as a keyword argument. Valid keys are:
- `"next_token"`: A token used to get the next set of results.
"""
function list_applications(; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return iotfleethub(
        "GET",
        "/applications",
        params;
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end

"""
    list_tags_for_resource(resource_arn; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Lists the tags for the specified resource.  Fleet Hub for AWS IoT Device Management is in
public preview and is subject to change.

# Arguments
- `resource_arn`: The ARN of the resource.

"""
function list_tags_for_resource(
    resourceArn; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...
)
    params = amazonify(MAPPING, kwargs)
    return iotfleethub(
        "GET",
        "/tags/$(resourceArn)",
        params;
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end

"""
    tag_resource(resource_arn, tags; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Adds to or modifies the tags of the specified resource. Tags are metadata which can be used
to manage a resource.  Fleet Hub for AWS IoT Device Management is in public preview and is
subject to change.

# Arguments
- `resource_arn`: The ARN of the resource.
- `tags`: The new or modified tags for the resource.

"""
function tag_resource(
    resourceArn, tags; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...
)
    params = amazonify(MAPPING, kwargs)
    return iotfleethub(
        "POST",
        "/tags/$(resourceArn)",
        Dict{String,Any}(mergewith(_merge, Dict{String,Any}("tags" => tags), params));
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end

"""
    untag_resource(resource_arn, tag_keys; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Removes the specified tags (metadata) from the resource.  Fleet Hub for AWS IoT Device
Management is in public preview and is subject to change.

# Arguments
- `resource_arn`: The ARN of the resource.
- `tag_keys`: A list of the keys of the tags to be removed from the resource.

"""
function untag_resource(
    resourceArn, tagKeys; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...
)
    params = amazonify(MAPPING, kwargs)
    return iotfleethub(
        "DELETE",
        "/tags/$(resourceArn)",
        Dict{String,Any}(mergewith(_merge, Dict{String,Any}("tagKeys" => tagKeys), params));
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end

"""
    update_application(application_id; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Updates information about a Fleet Hub for a AWS IoT Device Management web application.
Fleet Hub for AWS IoT Device Management is in public preview and is subject to change.

# Arguments
- `application_id`: The unique Id of the web application.

# Optional Parameters
Optional parameters can be passed as a keyword argument. Valid keys are:
- `"application_description"`: An optional description of the web application.
- `"application_name"`: The name of the web application.
- `"client_token"`: A unique case-sensitive identifier that you can provide to ensure the
  idempotency of the request. Don't reuse this client token if a new idempotent request is
  required.
"""
function update_application(
    applicationId; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...
)
    params = amazonify(MAPPING, kwargs)
    return iotfleethub(
        "PATCH",
        "/applications/$(applicationId)",
        Dict{String,Any}(
            mergewith(_merge, Dict{String,Any}("client_token" => string(uuid4())), params)
        );
        aws_config=aws_config,
        feature_set=SERVICE_FEATURE_SET,
    )
end
