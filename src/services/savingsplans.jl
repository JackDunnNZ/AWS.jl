# This file is auto-generated by AWSMetadata.jl
using AWS
using AWS.AWSServices: savingsplans
using AWS.Compat
using AWS.UUIDs

# Julia syntax for service-level optional parameters to the AWS request syntax
const SERVICE_PARAMETER_MAP = OrderedCollections.LittleDict("client_token" => "clientToken", "purchase_time" => "purchaseTime", "tags" => "tags", "upfront_payment_amount" => "upfrontPaymentAmount", "currencies" => "currencies", "descriptions" => "descriptions", "durations" => "durations", "filters" => "filters", "max_results" => "maxResults", "next_token" => "nextToken", "offering_ids" => "offeringIds", "operations" => "operations", "payment_options" => "paymentOptions", "plan_types" => "planTypes", "product_type" => "productType", "service_codes" => "serviceCodes", "usage_types" => "usageTypes", "products" => "products", "savings_plan_offering_ids" => "savingsPlanOfferingIds", "savings_plan_payment_options" => "savingsPlanPaymentOptions", "savings_plan_types" => "savingsPlanTypes", "savings_plan_arns" => "savingsPlanArns", "savings_plan_ids" => "savingsPlanIds", "states" => "states")

"""
    create_savings_plan(commitment, savings_plan_offering_id; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Creates a Savings Plan.

# Arguments
- `commitment`: The hourly commitment, in USD. This is a value between 0.001 and 1 million.
  You cannot specify more than three digits after the decimal point.
- `savings_plan_offering_id`: The ID of the offering.

# Keyword Parameters
- `client_token`: Unique, case-sensitive identifier that you provide to ensure the
  idempotency of the request.
- `purchase_time`: The time at which to purchase the Savings Plan, in UTC format
  (YYYY-MM-DDTHH:MM:SSZ).
- `tags`: One or more tags.
- `upfront_payment_amount`: The up-front payment amount. This is a whole number between 50
  and 99 percent of the total value of the Savings Plan. This parameter is supported only if
  the payment option is Partial Upfront.
"""
function create_savings_plan(commitment, savingsPlanOfferingId; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return savingsplans("POST", "/CreateSavingsPlan", Dict{String, Any}(mergewith(_merge, Dict{String, Any}("commitment"=>commitment, "savingsPlanOfferingId"=>savingsPlanOfferingId, "client_token"=>string(uuid4())), params)); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    delete_queued_savings_plan(savings_plan_id; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Deletes the queued purchase for the specified Savings Plan.

# Arguments
- `savings_plan_id`: The ID of the Savings Plan.

"""
function delete_queued_savings_plan(savingsPlanId; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return savingsplans("POST", "/DeleteQueuedSavingsPlan", Dict{String, Any}(mergewith(_merge, Dict{String, Any}("savingsPlanId"=>savingsPlanId), params)); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    describe_savings_plan_rates(savings_plan_id; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Describes the specified Savings Plans rates.

# Arguments
- `savings_plan_id`: The ID of the Savings Plan.

# Keyword Parameters
- `filters`: The filters.
- `max_results`: The maximum number of results to return with a single call. To retrieve
  additional results, make another call with the returned token value.
- `next_token`: The token for the next page of results.
"""
function describe_savings_plan_rates(savingsPlanId; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return savingsplans("POST", "/DescribeSavingsPlanRates", Dict{String, Any}(mergewith(_merge, Dict{String, Any}("savingsPlanId"=>savingsPlanId), params)); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    describe_savings_plans(; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Describes the specified Savings Plans.

# Keyword Parameters
- `filters`: The filters.
- `max_results`: The maximum number of results to return with a single call. To retrieve
  additional results, make another call with the returned token value.
- `next_token`: The token for the next page of results.
- `savings_plan_arns`: The Amazon Resource Names (ARN) of the Savings Plans.
- `savings_plan_ids`: The IDs of the Savings Plans.
- `states`: The states.
"""
function describe_savings_plans(; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return savingsplans("POST", "/DescribeSavingsPlans", params; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    describe_savings_plans_offering_rates(; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Describes the specified Savings Plans offering rates.

# Keyword Parameters
- `filters`: The filters.
- `max_results`: The maximum number of results to return with a single call. To retrieve
  additional results, make another call with the returned token value.
- `next_token`: The token for the next page of results.
- `operations`: The specific AWS operation for the line item in the billing report.
- `products`: The AWS products.
- `savings_plan_offering_ids`: The IDs of the offerings.
- `savings_plan_payment_options`: The payment options.
- `savings_plan_types`: The plan types.
- `service_codes`: The services.
- `usage_types`: The usage details of the line item in the billing report.
"""
function describe_savings_plans_offering_rates(; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return savingsplans("POST", "/DescribeSavingsPlansOfferingRates", params; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    describe_savings_plans_offerings(; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Describes the specified Savings Plans offerings.

# Keyword Parameters
- `currencies`: The currencies.
- `descriptions`: The descriptions.
- `durations`: The durations, in seconds.
- `filters`: The filters.
- `max_results`: The maximum number of results to return with a single call. To retrieve
  additional results, make another call with the returned token value.
- `next_token`: The token for the next page of results.
- `offering_ids`: The IDs of the offerings.
- `operations`: The specific AWS operation for the line item in the billing report.
- `payment_options`: The payment options.
- `plan_types`: The plan type.
- `product_type`: The product type.
- `service_codes`: The services.
- `usage_types`: The usage details of the line item in the billing report.
"""
function describe_savings_plans_offerings(; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return savingsplans("POST", "/DescribeSavingsPlansOfferings", params; aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    list_tags_for_resource(resource_arn; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Lists the tags for the specified resource.

# Arguments
- `resource_arn`: The Amazon Resource Name (ARN) of the resource.

"""
function list_tags_for_resource(resourceArn; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return savingsplans("POST", "/ListTagsForResource", Dict{String, Any}(mergewith(_merge, Dict{String, Any}("resourceArn"=>resourceArn), params)); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    tag_resource(resource_arn, tags; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Adds the specified tags to the specified resource.

# Arguments
- `resource_arn`: The Amazon Resource Name (ARN) of the resource.
- `tags`: One or more tags. For example, { \"tags\": {\"key1\":\"value1\",
  \"key2\":\"value2\"} }.

"""
function tag_resource(resourceArn, tags; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return savingsplans("POST", "/TagResource", Dict{String, Any}(mergewith(_merge, Dict{String, Any}("resourceArn"=>resourceArn, "tags"=>tags), params)); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end

"""
    untag_resource(resource_arn, tag_keys; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)

Removes the specified tags from the specified resource.

# Arguments
- `resource_arn`: The Amazon Resource Name (ARN) of the resource.
- `tag_keys`: The tag keys.

"""
function untag_resource(resourceArn, tagKeys; aws_config::AbstractAWSConfig=global_aws_config(), kwargs...)
    params = amazonify(MAPPING, kwargs)
    return savingsplans("POST", "/UntagResource", Dict{String, Any}(mergewith(_merge, Dict{String, Any}("resourceArn"=>resourceArn, "tagKeys"=>tagKeys), params)); aws_config=aws_config, feature_set=SERVICE_FEATURE_SET)
end
